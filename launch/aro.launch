<?xml version="1.0"?>

<launch>
  
  <!-- show doc in command line: roslaunch aro aro.launch ——ros -->
  <arg name="rc" default="false" doc="enable ('true') or disable remote control via ds4_driver"/>
  <arg name="rviz" default="false" doc="enable ('true') or disable rviz"/>
  <arg name="world" default="aro_field_world_v2" doc="launch specific or generated world"/>
   
  <!-- start generated world and spawn hector quadrotor ... -->
  <group if="$(eval arg('world') == 'generated')">
    <include file="$(find hector_gazebo_worlds)/launch/start.launch">
      <arg name="world" value="$(find virtual_maize_field)/worlds/generated.world"/> 
    </include>
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor.gazebo.xacro"/> 
      <arg name="x" value="5.0"/> 
      <arg name="y" value="0.0"/> 
      <arg name="z" value="0.3"/> 
    </include>
  </group> 
  
  <!-- or start own world and spawn hector quadrotor -->
  <group if="$(eval arg('world') != 'generated')">
    <include file="$(find hector_gazebo_worlds)/launch/start.launch">
      <arg name="world" value="$(find aro)/worlds/$(arg world).world"/> 
    </include>
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor.gazebo.xacro"/> 
    </include>
  </group> 
  
  <!-- launch hector node -->
  <node pkg="aro" 
    type="hector_node.py" 
    name="hector_node" 
    output="screen" >
  </node>
  
  <!-- launch hector remote control if 'rc' is true -->
  <group if="$(arg rc)">
    <include file="$(find aro)/launch/status_to_hector.launch" /> 
  </group> 
  
  <!-- start rviz visualization with sonar config -->
  <group if="$(arg rviz)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find aro)/config/aro_sonar.rviz"/>
  </group> 
  
</launch>
